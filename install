#!/bin/bash
if [ `whoami` == root ]; then
  echo "DONT run this script as root, or using sudo"
  exit
fi

echo ""
echo "*************************************"
echo "* Setting up ideal Unix environment *"
echo "*************************************"
echo ""

BASEDIR=$(cd "$(dirname "$0")"; pwd)

cd `dirname $0`

if [ "$(ls -A $BASEDIR/shell/oh-my-zsh)" ]; then
  echo "---> Git submodule found. Moving on"
else
  echo "---> ERROR: please do a git clone --recursive to grab the oh-my-zsh submodule"
  exit
fi

# Installing fonts
echo ""
echo "===>  Installing fonts  <==="
if [ -d "/Library/Fonts" ]; then
  sudo cp $BASEDIR/fonts/* /Library/Fonts
fi

if [ -d "/usr/local/share/fonts" ]; then
  sudo cp $BASEDIR/fonts/* /usr/share/fonts
fi

# Installing vim
echo ""
echo "===>  Installing VIM  <==="
echo "--->  Backing up any previous .vimrc"
cp $HOME/.vimrc $HOME/.vimrc.bak
echo "--->  Linking .vimrc"
ln -sf $BASEDIR/vim/vimrc $HOME/.vimrc
echo "--->  Linking .gvimrc"
ln -sf $BASEDIR/vim/gvimrc $HOME/.gvimrc
echo "--->  Linking .vim folder"
ln -sf $BASEDIR/vim/vim $HOME/.vim

# Installing bash
echo ""
echo "===>  Installing bashrc (but only as a backup to zsh)  <==="
echo "--->  Making backup of bashrc"
cp $HOME/.bashrc $HOME/.bashrc.bak
echo "--->  Linking bashrc"
ln -sf $BASEDIR/shell/bashrc $HOME/.bashrc

# Installing zsh
echo ""
echo "===>  Installing zsh  <==="

echo "--->  Making backup of zshrc"
cp $HOME/.zshrc $HOME/.zshrc.bak

echo "--->  Changing default shell to zsh"
chsh -s `which zsh`
/usr/bin/env zsh

# Clear home of any conflicting zsh files
rm -f $HOME/.zshrc
rm -rf $HOME/.oh-my-zsh

echo "--->  Linking zshrc"
ln -sf $BASEDIR/shell/zshrc $HOME/.zshrc
ln -sf $BASEDIR/shell/localzshrc $HOME/.localzshrc
ln -sf $BASEDIR/shell/oh-my-zsh $HOME/.oh-my-zsh

echo "--->  Installing customized theme"
cp $BASEDIR/shell/evan.zsh-theme $BASEDIR/shell/oh-my-zsh/themes

echo "--->  Sourcing default zshrc file"
source $HOME/.zshrc
echo "--->  zsh ready to go"

echo ""
echo "====  Successfully installed Evan's environment  ===="
